platform: linux

image_resource:
  type: docker-image
  source:
    repository: keppel.eu-de-1.cloud.sap/ccloud/cypress-client
    tag: "latest"

inputs:
  - name: juno-assets-server.git
  - name: test_data
  - name: assets
  - name: meta
outputs:
  - name: passed
  - name: test_results

params:

# describe the code
# 1. check if the name, version and repository are set in the package.json file
# 2. check if the file defined in main or module exists
run:
  path: /bin/sh
  args:
    - -c
    - |
      # 1. check if name and repository are set 
      # 1.1 if not set, throw error (FAILED)
      # 2. check if the such an asset exists in the swift container final-assets
      # 2.1 yes: we are in the update mode, check the version
      # 2.1.1 if the version is the same as the one in the swift container final-assets, throw error (FAILED)
      # 2.2 no: we are in the create mode (first run, new asset!)
      # 3. check main or module entry in package.json and if the entry file exists
      # 3.1 if not, throw error (FAILED)

      # 4. check if the asset can be mounted in the mount-test.html

      . juno-assets-server.git/scripts/logger.sh

      # generate build url 
      cd meta 
      BUILD_NAME="$(cat build-name)"
      BUILD_URL="$(cat atc-external-url)/teams/$(cat build-team-name)/pipelines/$(cat build-pipeline-name)/jobs/$(cat build-job-name)/builds/$(cat build-name)" 
      cd ..

      BUILD_RESULTS="$(pwd)/test_results/build-$BUILD_NAME"
      mkdir -p "$BUILD_RESULTS"

      # if assets/build-log.json exists, copy it to passed/build-log.json
      if [ -f assets/build-log.json ]; then
        cp assets/build-log.json passed/build-log.json
      fi

      msg_info "copy e2e tests from juno-assets-server.git to ./e2e"
      cp -r ./juno-assets-server.git/e2e .
      msg_info "copy mount-test.html to test_data"
      cp ./juno-assets-server.git/templates/mount-test.html ./test_data/      
      msg_info "create serve.config.json"
      msg_info "this is needed to avoid clean urls, we want to have extensions like .html"
      # cleanUrls	Have the .html extension stripped from paths
      echo '{"cleanUrls": false}' > /tmp/serve.config.json
      msg_info "run server in test_data"
      serve ./test_data -n -u -p 3000 -c /tmp/serve.config.json & sleep 3 

      msg_info "=== RUN MOUNT TESTS ===\n"

      cd e2e
      package_json_files=$(find ../assets -type f -name package.json)

      # loop over assets in pending_assets to avoid unnesseray tests                
      for f in $package_json_files; do 
        NAME=$(cat $f | jq -r '.name') 
        VERSION=$(cat $f | jq -r '.version') 
        TYPE_FOLDER=$(basename $(dirname $(dirname $f)))
        ASSET_TEST_RESULTS="$BUILD_RESULTS/$TYPE_FOLDER/$NAME@$VERSION"
        msg_info "===TEST $NAME@$VERSION ($TYPE_FOLDER)" 

        cypress run --spec "cypress/integration/assets-server/mount_asset.spec.js" \
        --browser chrome \
        --env APP_NAME=$NAME,APP_VERSION=$VERSION \
        --config "{\"baseUrl\":\"http://127.0.0.1:3000\",\"screenshotsFolder\":\"$ASSET_TEST_RESULTS/screenshots\",\"videosFolder\":\"$ASSET_TEST_RESULTS/videos\"}"

        # Check the exit status of the cp command 
        if [ $? -eq 0 ]; then 
          PASSED="true"
          mkdir -p "../passed/$TYPE_FOLDER/$NAME@$VERSION" && \
          cp -r $(dirname $f)/* "../passed/$TYPE_FOLDER/$NAME@$VERSION/" 
        else 
          PASSED="false"
          ERROR="mount test failed"
          msg_info "===RESULT: $NAME@$VERSION $PASSED"
        fi

        # Update build log
        ../juno-assets-server.git/scripts/build_log.sh log --file ../passed/build-log.json --name $NAME --type $TYPE_FOLDER --version $VERSION --passed $PASSED --check mountable --build-url $BUILD_URL --error $ERROR
      done

      # print build log using jq
      cat ../passed/build-log.json | jq
      exit 0
